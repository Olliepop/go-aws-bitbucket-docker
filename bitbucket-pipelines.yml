options:
  docker: true

pipelines:
  branches:
    develop:
      - step:
          name: Push Docker container
          image: tstrohmeier/awscli:3.6.4
          caches:
            - docker
          script:
            - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
            - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
            - docker build -t ${AWS_REGISTRY_URL}:$BUILD_ID .
            - docker push ${AWS_REGISTRY_URL}:$BUILD_ID
            - docker tag ${AWS_REGISTRY_URL}:$BUILD_ID ${AWS_REGISTRY_URL}:${DOCKER_IMAGE_TAG}
            - docker push ${AWS_REGISTRY_URL}:${DOCKER_IMAGE_TAG}
      - step:
          name: Deploy test to ECS
          image: python:3.5.1
          trigger: manual
          deployment: test
          script:
            - pip install boto3==1.3.0
            # the first argument is a template for the task definition
            # the second argument is the docker image we want to deploy
            #   composed of our environment variables
            # the third argument is the number of tasks to be run on our cluster
            # the fourth argument is the minimum percentage of healthy containers
            #   that should be running on the cluster
            #   zero is used for the purposes of a demo running a cluster with
            #   one host
            #   in production this number should be greater than zero
            # the fifth argument is the maximum percentage of healthy containers
            #   that should be running on the cluster
            - python scripts/AWS/ECS/deploy.py scripts/AWS/ECS/task-definition.json ${AWS_REGISTRY_URL}:${DOCKER_IMAGE_TAG} 1 0 200
